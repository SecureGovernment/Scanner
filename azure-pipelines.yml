# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    windows:
      imageName: 'windows-2019'

pool:
  vmImage: $(imageName)

variables:
  buildConfiguration: 'Release'

steps:
- task: CmdLine@2
  inputs:
    script: |
      export SONAR_SCANNER_VERSION=4.2.0.1873
      export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
      rm -rf $SONAR_SCANNER_HOME
      mkdir -p $SONAR_SCANNER_HOME
      curl -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
      unzip $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
      rm $HOME/.sonar/sonar-scanner.zip
      export PATH=$SONAR_SCANNER_HOME/bin:$PATH
      export SONAR_SCANNER_OPTS="-server"
- script: dotnet build src/SecureGovernment.sln --configuration $(buildConfiguration)
  displayName: 'Building solution'
- script: dotnet test src/SecureGovernment.Domain.Tests/SecureGovernment.Domain.Tests.csproj --configuration $(buildConfiguration)
  displayName: "Running tests for SecureGovernment.Domain.Tests project"
- task: CmdLine@2
  inputs:
    script: |
      cd src/
      sonar-scanner \
        -Dsonar.projectKey=SecureGovernment_Scanner \
        -Dsonar.organization=securegovernment \
        -Dsonar.sources=. \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=$(sonar-login)
